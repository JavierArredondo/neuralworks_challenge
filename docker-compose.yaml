version: '3'

services:
  postgis:
    image: kartoza/postgis:14-3.2
    environment:
      - POSTGRES_DB=neuralworks
      - POSTGRES_USER=an_user
      - POSTGRES_PASS=a_password
      - ALLOW_IP_RANGE=0.0.0.0/0
      - POSTGRES_MULTIPLE_EXTENSIONS=postgis,hstore,postgis_topology,postgis_raster,pgrouting
    ports:
      - "5432:5432"
    restart: on-failure
    healthcheck:
      test: "exit 0"

  initdb:
    build: ./initdb
    environment:
      - USER=an_user
      - PASSWORD=a_password
      - DB=neuralworks
      - HOST=postgis
    depends_on:
      - postgis
    command: ["./wait-for-it.sh", "postgis:5432", "--", "python", "main.py"]

  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.1
    hostname: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:5.5.1
    hostname: kafka
    depends_on:
      - zookeeper
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092,PLAINTEXT_HOST://kafka:9093
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_TRANSACTION_STATE_LOG_MIN_ISR=1
      - KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1
      - KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS=0
      - KAFKA_JMX_PORT=9101
    ports:
      - "9092:9092"
      - "9093:9093"

  producer:
    build: ./producer
    depends_on:
      - initdb
    environment:
      - KAFKA_SERVER=kafka:9093
      - DATA_PATH=trips.csv
      - NUM_MESSAGES=100000
    volumes:
      - ./trips.csv:/app/trips.csv

  consumer:
    build: ./consumer
    depends_on:
      - initdb
    environment:
      - KAFKA_SERVER=kafka:9093
      - GROUP_ID=test
      - USER=an_user
      - PASSWORD=a_password
      - DB=neuralworks
      - HOST=postgis
      - MODEL_PATH=models/kmeans.pkl
      - SCALER_PATH=models/scaler.pkl
    volumes:
      - ./models:/app/models

  akhq:
    image: tchiotludo/akhq
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            docker-kafka-server:
              properties:
                bootstrap.servers: "kafka:9093"
    ports:
      - "8080:8080"
    depends_on:
      - kafka
      - zookeeper
      - initdb

  api:
    build: ./api
    environment:
      - APP_WORKERS=3
      - APP_THREADS=1
      - TIMEOUT_REQUEST=120
      - LOG_LEVEL=info
      - AKHQ_URL=akhq:8080
      - DB_USER=an_user
      - DB_PASSWORD=a_password
      - DB_NAME=neuralworks
      - DB_HOST=postgis
    ports:
      - "5000:5000"
